/**
* \file
* Custom (user) specializations of methods of Easy class.
*
* IMPORTANT !!!
* Users should add explicit specializations for types
* they use in their applications when building library with
* SELF_CONTAINED set. Otherwise there will be linker errors when 
* _using_ the library which has been built without these specializations.
*
*/

#include "curlpp/Easy.hpp"

#include <vector>


using namespace curlpp::options;


namespace curlpp
{


/**
 * Custom specializations for...
 *
 * template<typename InputIterator>
 * void curlpp::Easy::setOpt(InputIterator first, InputIterator last)
 */

/// Used in example23.
	
typedef std::vector<OptionBase *>::iterator EasyCustomType1;

template
CURLPPAPI void Easy::setOpt<EasyCustomType1>(EasyCustomType1 first, EasyCustomType1 last);

/// Add more here...


} // namespace curlpp